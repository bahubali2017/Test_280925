‚úÖ Agent Prompt ‚Äî Phase 9.2: TypeScript Validation & Fix Pass

You are a senior AI systems engineer tasked with completing Phase 9.2: TypeScript Validation & Fix Pass of the Medical Safety Layer in the Anamnesis Medical AI Assistant. Your mission is to resolve all 24 TypeScript errors identified after ESLint cleanup and finalize strict-mode type compliance for this layer.

üîç Target Files (with errors):

client/src/__tests__/safety-engine.test.js

client/src/components/FeedbackNotice.jsx

client/src/components/TriageWarning.jsx

client/src/lib/medical-layer/atd-router.js

client/src/lib/medical-layer/emergency-detector.js

client/src/lib/medical-layer/fallback-engine.js

client/src/lib/medical-layer/triage-engine.js

üõ†Ô∏è Tasks & Fix Instructions:
1. Resolve Missing Imports

Alert, AlertDescription, AlertTitle, Ban, Button are undefined. Re-add the appropriate imports at the top of both component files:

import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { Ban } from "lucide-react";
import { Button } from "@/components/ui/button";

2. Fix Invalid or Missing TypeScript Values

You are assigning string to strict enums or union types. Fix by ensuring only allowed literal values are used.

Example:

// ‚ùå Error
riskLevel = "very high";

// ‚úÖ Fix
riskLevel = "high"; // must be "low" | "medium" | "high"


Apply similar fixes to:

providerType (must be 'emergency' | 'urgent' | 'routine' | 'mental_health')

emergencyType (must be 'medical' | 'mental_health' | 'trauma')

priority in emergency checklist (must be 'critical' | 'high' | 'medium')

3. Fix JSDoc Parameter Tag Mismatches

Several @param tags do not match the actual parameter names in:

emergency-detector.js

fallback-engine.js

üîß Update the JSDoc to match actual parameter names, or rename parameters if appropriate:

/**
 * @param {object} options - Additional context
 */
// function detectEmergency(options) { ...

4. Fix Object Type Compatibility

Example: In triage-engine.js, the object literal includes an unknown property:

// ‚ùå
conservativeBiasApplied: true // not in type definition

// ‚úÖ Remove or extend the return type to include this key

5. Test Suite Error (Jest Globals)

In safety-engine.test.js, fix missing @jest/globals types.

Option 1 (Best): Install the required types:

npm install --save-dev @types/jest


Option 2 (Quick fix): Update the import:

import { describe, it, expect, beforeEach } from 'jest';

‚úÖ Acceptance Criteria

 All 24 TypeScript errors resolved

 No use of any or suppression comments

 All JSDoc blocks updated for parameter consistency

 UI components fully render without missing imports

 All enum values validated and corrected

 npx tsc --noEmit passes with zero errors

 LAYER_DEVELOPMENT_PLAN.md updated with Phase 9.2 completion