ðŸŽ¨ Anamnesis Login Page - Tab Styling & Hover Effects Guide
ðŸ“‹ Overview
This guide provides the complete color specifications and implementation details for the tab switcher and hover effects used in the Anamnesis Medical Platform authentication page.

ðŸŽ¯ TAB SWITCHER COMPONENT STYLING
Container Styling
/* Tab Container */
.tab-container {
  display: flex;
  border-radius: 0.5rem;          /* rounded-lg */
  background-color: #f3f4f6;      /* bg-gray-100 */
  padding: 0.25rem;               /* p-1 */
  margin-bottom: 1rem;            /* mb-4 */
}
Individual Tab Button Styling
Base Tab Styles
/* Shared Tab Button Styles */
.tab-button {
  flex: 1;                        /* flex-1 */
  padding: 0.5rem 1rem;           /* py-2 px-4 */
  font-size: 0.875rem;            /* text-sm */
  font-weight: 500;               /* font-medium */
  border-radius: 0.375rem;        /* rounded-md */
  transition: colors 150ms ease;  /* transition-colors */
  cursor: pointer;
  border: none;
  outline: none;
}
Active Tab State
/* Active/Selected Tab */
.tab-button.active {
  background-color: #ffffff;      /* bg-white */
  color: #111827;                 /* text-gray-900 */
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); /* shadow-sm */
}
Inactive Tab State
/* Inactive/Unselected Tab */
.tab-button.inactive {
  background-color: transparent;   /* No background */
  color: #4b5563;                 /* text-gray-600 */
}
Hover Effect for Inactive Tabs
/* Hover State for Inactive Tabs */
.tab-button.inactive:hover {
  color: #111827;                 /* hover:text-gray-900 */
  background-color: rgba(255, 255, 255, 0.5); /* Optional subtle background */
}
ðŸŽ¨ COLOR SPECIFICATIONS
Background Colors
Tab Container Background: #f3f4f6 (Gray-100)
Active Tab Background: #ffffff (Pure White)
Inactive Tab Background: transparent
Text Colors
Active Tab Text: #111827 (Gray-900 - Dark charcoal)
Inactive Tab Text: #4b5563 (Gray-600 - Medium gray)
Inactive Tab Hover Text: #111827 (Gray-900 - Same as active)
Shadow & Effects
Active Tab Shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05) (Subtle shadow)
Border Radius: 0.5rem (Container), 0.375rem (Individual tabs)
ðŸ’» COMPLETE IMPLEMENTATION EXAMPLES
1. React/JSX Implementation
const TabSwitcher = ({ activeTab, onTabChange }) => {
  return (
    <div className="flex rounded-lg bg-gray-100 p-1 mb-4">
      <button
        className={`flex-1 py-2 px-4 text-sm font-medium rounded-md transition-colors ${
          activeTab === 'signin' 
            ? 'bg-white text-gray-900 shadow-sm' 
            : 'text-gray-600 hover:text-gray-900'
        }`}
        onClick={() => onTabChange('signin')}
      >
        Sign In
      </button>
      <button
        className={`flex-1 py-2 px-4 text-sm font-medium rounded-md transition-colors ${
          activeTab === 'signup' 
            ? 'bg-white text-gray-900 shadow-sm' 
            : 'text-gray-600 hover:text-gray-900'
        }`}
        onClick={() => onTabChange('signup')}
      >
        Sign Up
      </button>
    </div>
  );
};
2. Pure CSS Implementation
/* Tab Container */
.auth-tab-switcher {
  display: flex;
  border-radius: 0.5rem;
  background-color: #f3f4f6;
  padding: 0.25rem;
  margin-bottom: 1rem;
}
/* Tab Button Base */
.auth-tab-button {
  flex: 1;
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
  font-weight: 500;
  border-radius: 0.375rem;
  transition: all 0.15s ease-in-out;
  border: none;
  cursor: pointer;
  outline: none;
  font-family: inherit;
}
/* Active Tab State */
.auth-tab-button.active {
  background-color: #ffffff;
  color: #111827;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}
/* Inactive Tab State */
.auth-tab-button.inactive {
  background-color: transparent;
  color: #4b5563;
}
/* Hover Effect */
.auth-tab-button.inactive:hover {
  color: #111827;
}
/* Focus State for Accessibility */
.auth-tab-button:focus {
  outline: 2px solid #06b6d4;
  outline-offset: 2px;
}
3. HTML Structure
<div class="auth-tab-switcher">
  <button class="auth-tab-button active" onclick="switchTab('signin')">
    Sign In
  </button>
  <button class="auth-tab-button inactive" onclick="switchTab('signup')">
    Sign Up
  </button>
</div>
4. Vue.js Implementation
<template>
  <div class="flex rounded-lg bg-gray-100 p-1 mb-4">
    <button
      v-for="tab in tabs"
      :key="tab.value"
      :class="[
        'flex-1 py-2 px-4 text-sm font-medium rounded-md transition-colors',
        activeTab === tab.value 
          ? 'bg-white text-gray-900 shadow-sm' 
          : 'text-gray-600 hover:text-gray-900'
      ]"
      @click="$emit('tab-change', tab.value)"
    >
      {{ tab.label }}
    </button>
  </div>
</template>
<script>
export default {
  props: {
    activeTab: String,
    tabs: {
      type: Array,
      default: () => [
        { value: 'signin', label: 'Sign In' },
        { value: 'signup', label: 'Sign Up' }
      ]
    }
  },
  emits: ['tab-change']
}
</script>
5. Angular Implementation
// Component TypeScript
@Component({
  selector: 'app-tab-switcher',
  template: `
    <div class="flex rounded-lg bg-gray-100 p-1 mb-4">
      <button
        *ngFor="let tab of tabs"
        [class]="getTabClass(tab.value)"
        (click)="onTabChange(tab.value)"
      >
        {{ tab.label }}
      </button>
    </div>
  `
})
export class TabSwitcherComponent {
  @Input() activeTab: string = 'signin';
  @Output() tabChange = new EventEmitter<string>();
  tabs = [
    { value: 'signin', label: 'Sign In' },
    { value: 'signup', label: 'Sign Up' }
  ];
  getTabClass(tabValue: string): string {
    const baseClass = 'flex-1 py-2 px-4 text-sm font-medium rounded-md transition-colors';
    const activeClass = 'bg-white text-gray-900 shadow-sm';
    const inactiveClass = 'text-gray-600 hover:text-gray-900';
    
    return `${baseClass} ${this.activeTab === tabValue ? activeClass : inactiveClass}`;
  }
  onTabChange(tab: string): void {
    this.tabChange.emit(tab);
  }
}
ðŸŽ¯ NEURAL BUTTON STYLING (Used in Login Form)
Neural Button Specifications
/* Neural Button Base */
.neural-button {
  background: linear-gradient(135deg, #06b6d4, #3b82f6); /* Neural cyan to blue */
  border: 1px solid #22d3ee;                              /* Neural cyan light border */
  box-shadow: 0 4px 15px rgba(6, 182, 212, 0.3);         /* Neural shadow */
  color: white;
  font-weight: 500;
  border-radius: 0.375rem;
  padding: 0.75rem 1rem;
  transition: all 0.3s ease;
}
/* Neural Button Hover Effect */
.neural-button:hover {
  background: linear-gradient(135deg, #22d3ee, #6366f1);  /* Light cyan to indigo */
  box-shadow: 0 6px 20px rgba(6, 182, 212, 0.6);         /* Enhanced glow */
  transform: scale(1.05);                                  /* Subtle scale effect */
}
/* Neural Button Focus State */
.neural-button:focus {
  outline: 2px solid #06b6d4;
  outline-offset: 2px;
}
/* Neural Button Disabled State */
.neural-button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}
ðŸ“Š EXACT HEX COLOR VALUES
Element	State	Background	Text Color	Shadow/Border
Tab Container	-	#f3f4f6	-	-
Active Tab	Selected	#ffffff	#111827	rgba(0,0,0,0.05)
Inactive Tab	Default	transparent	#4b5563	-
Inactive Tab	Hover	transparent	#111827	-
Neural Button	Default	linear-gradient(135deg, #06b6d4, #3b82f6)	#ffffff	rgba(6,182,212,0.3)
Neural Button	Hover	linear-gradient(135deg, #22d3ee, #6366f1)	#ffffff	rgba(6,182,212,0.6)
ðŸŽ¨ DESIGN PRINCIPLES
Visual Hierarchy
Active tabs use high contrast (white background, dark text)
Inactive tabs use lower contrast (transparent background, medium gray text)
Hover effects provide immediate visual feedback
Accessibility
Focus indicators for keyboard navigation
Color contrast ratios meet WCAG 2.1 AA standards
Touch targets are 44px minimum for mobile accessibility
Medical Context
Clean, professional appearance suitable for healthcare environments
Subtle animations that don't distract from medical tasks
Clear visual states for critical authentication flow
ðŸ”§ CUSTOMIZATION OPTIONS
Color Variations
Replace the gray color scheme with custom colors while maintaining contrast ratios:

/* Custom Color Example */
.tab-container-custom {
  background-color: #e0f2fe;      /* Light blue background */
}
.tab-button-active-custom {
  background-color: #06b6d4;      /* Neural cyan background */
  color: #ffffff;                  /* White text */
}
.tab-button-inactive-custom {
  color: #0891b2;                  /* Neural cyan dark text */
}
Size Variations
/* Large Tab Size */
.tab-button-lg {
  padding: 0.75rem 1.5rem;        /* py-3 px-6 */
  font-size: 1rem;                /* text-base */
}
/* Small Tab Size */
.tab-button-sm {
  padding: 0.375rem 0.75rem;      /* py-1.5 px-3 */
  font-size: 0.75rem;             /* text-xs */
}
This complete styling guide ensures perfect consistency of the Anamnesis Medical Platform's tab switcher and button styling across all your platforms and implementations.

Tab Styling Guide Version: 1.0
Last Updated: January 6, 2025
Compatible With: React, Vue, Angular, HTML/CSS, and all major frameworks