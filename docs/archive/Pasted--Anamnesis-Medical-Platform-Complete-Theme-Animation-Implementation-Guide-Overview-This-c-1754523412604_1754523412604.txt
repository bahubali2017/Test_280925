🎨 Anamnesis Medical Platform - Complete Theme & Animation Implementation Guide
📋 Overview
This comprehensive guide provides all the code, specifications, and instructions needed to implement the Anamnesis Medical Platform's neural theme colors and signature water ripple logo animation across any platform or technology stack.

🎨 COMPLETE THEME COLOR SYSTEM
Core Neural Color Palette
Primary Brand Colors
/* Neural Cyan Family (Primary Brand Identity) */
--neural-cyan-primary: #06b6d4;     /* rgb(6, 182, 212)   | hsl(188, 94%, 43%) */
--neural-cyan-light: #22d3ee;       /* rgb(34, 211, 238)  | hsl(186, 85%, 53%) */
--neural-cyan-dark: #0891b2;        /* rgb(8, 145, 178)   | hsl(191, 91%, 36%) */
/* Supporting Neural Colors */
--neural-blue: #3b82f6;             /* rgb(59, 130, 246)  | hsl(217, 91%, 60%) */
--neural-indigo: #6366f1;           /* rgb(99, 102, 241)  | hsl(238, 84%, 67%) */
--neural-purple: #8b5cf6;           /* rgb(139, 92, 246)  | hsl(256, 87%, 66%) */
Animation & Effect Colors
/* Glow Effects */
--neural-glow-standard: rgba(6, 182, 212, 0.6);    /* 60% opacity cyan */
--neural-glow-intense: rgba(6, 182, 212, 1);       /* 100% opacity cyan */
--neural-shadow: rgba(6, 182, 212, 0.3);           /* 30% opacity cyan */
/* Water Ripple Effects */
--neural-ripple-primary: rgba(159, 223, 255, 0.8); /* Primary ripple layer */
--neural-ripple-secondary: rgba(159, 223, 255, 0.6); /* Secondary ripple */
--neural-ripple-tertiary: rgba(159, 223, 255, 0.4);  /* Tertiary ripple */
--neural-ripple-subtle: rgba(159, 223, 255, 0.2);    /* Subtle background */
/* Heartbeat Colors */
--heart-primary: #f472b6;                          /* Rose-pink for human elements */
--heart-glow: rgba(159, 223, 255, 0.4);           /* Cyan glow on heart */
Medical Professional Colors
/* Healthcare Background Colors */
--medical-white: #ffffff;           /* Pure white backgrounds */
--medical-gray-light: #f8fafc;      /* Light gray subtle backgrounds */
--medical-gray: #64748b;            /* Medium gray for text */
--medical-gray-dark: #334155;       /* Dark gray for headers */
/* Status & Alert Colors */
--success-green: #10b981;           /* Medical approval/success */
--warning-amber: #f59e0b;           /* Medical attention required */
--error-red: #ef4444;               /* Medical alert/error */
--info-blue: #3b82f6;               /* Medical information */
Complete CSS Variables Implementation
:root {
  /* Primary Neural Colors */
  --neural-cyan: #06b6d4;
  --neural-cyan-light: #22d3ee;
  --neural-cyan-dark: #0891b2;
  --neural-blue: #3b82f6;
  --neural-indigo: #6366f1;
  --neural-purple: #8b5cf6;
  
  /* Effect Colors */
  --neural-glow: rgba(6, 182, 212, 0.6);
  --neural-glow-intense: rgba(6, 182, 212, 1);
  --neural-shadow: rgba(6, 182, 212, 0.3);
  --neural-ripple: rgba(159, 223, 255, 0.6);
  --neural-ripple-light: rgba(159, 223, 255, 0.4);
  
  /* Heart Colors */
  --heart-primary: #f472b6;
  --heart-glow: rgba(159, 223, 255, 0.4);
  
  /* Medical Colors */
  --medical-white: #ffffff;
  --medical-gray-light: #f8fafc;
  --medical-gray: #64748b;
  --medical-gray-dark: #334155;
  
  /* Status Colors */
  --success-green: #10b981;
  --warning-amber: #f59e0b;
  --error-red: #ef4444;
  --info-blue: #3b82f6;
}
Gradient Combinations
/* Primary Neural Gradients */
.gradient-main-brand {
  background: linear-gradient(135deg, #06b6d4, #3b82f6);
}
.gradient-enhanced {
  background: linear-gradient(135deg, #22d3ee, #6366f1);
}
.gradient-hover-state {
  background: linear-gradient(135deg, #22d3ee, #6366f1);
}
/* Background Gradients */
.gradient-subtle-neural {
  background: linear-gradient(135deg, rgba(6, 182, 212, 0.1), rgba(59, 130, 246, 0.1));
}
.gradient-header-neural {
  background: linear-gradient(135deg, #06b6d4, #8b5cf6);
}
🌊 COMPLETE WATER RIPPLE ANIMATION SYSTEM
1. React/TypeScript Component (Recommended)
import React from 'react';
interface AnimatedLogoProps {
  className?: string;
  size?: number;
  logoSrc?: string;
  alt?: string;
}
export const AnimatedLogo: React.FC<AnimatedLogoProps> = ({ 
  className = "", 
  size = 120, 
  logoSrc = '/path/to/your/logo.png',
  alt = 'Neural Logo with Water Ripples'
}) => {
  return (
    <div 
      className={`animated-neural-logo ${className}`} 
      style={{ 
        width: size, 
        height: size,
        position: 'relative',
        animation: 'gentleHeartbeat 3s ease-in-out infinite',
        transformOrigin: 'center'
      }}
    >
      {/* Primary Ripple Layer */}
      <div 
        className="absolute top-1/2 left-1/2 pointer-events-none"
        style={{
          width: '100%',
          height: '100%',
          border: '2px solid rgba(159, 223, 255, 0.8)',
          borderRadius: '50%',
          transform: 'translate(-50%, -50%)',
          animation: 'continuousRipples 3s ease-out infinite'
        }}
      />
      
      {/* Secondary Ripple Layer */}
      <div 
        className="absolute top-1/2 left-1/2 pointer-events-none"
        style={{
          width: '100%',
          height: '100%',
          border: '1px solid rgba(159, 223, 255, 0.6)',
          borderRadius: '50%',
          transform: 'translate(-50%, -50%)',
          animation: 'continuousRipples 3s ease-out infinite 1s'
        }}
      />
      
      {/* Tertiary Ripple Layer */}
      <div 
        className="absolute top-1/2 left-1/2 pointer-events-none"
        style={{
          width: '100%',
          height: '100%',
          border: '1px solid rgba(159, 223, 255, 0.4)',
          borderRadius: '50%',
          transform: 'translate(-50%, -50%)',
          animation: 'rippleLayer1 3s ease-out infinite 0.5s'
        }}
      />
      
      {/* Additional Subtle Layer */}
      <div 
        className="absolute top-1/2 left-1/2 pointer-events-none"
        style={{
          width: '100%',
          height: '100%',
          border: '1px solid rgba(159, 223, 255, 0.2)',
          borderRadius: '50%',
          transform: 'translate(-50%, -50%)',
          animation: 'rippleLayer2 3s ease-out infinite 2s'
        }}
      />
      
      {/* Core Logo Image */}
      <img
        src={logoSrc}
        alt={alt}
        width={size}
        height={size}
        className="neural-brain-logo relative z-10"
        style={{
          width: '100%',
          height: '100%',
          objectFit: 'contain',
          filter: 'brightness(1) drop-shadow(0 0 8px rgba(159, 223, 255, 0.6))'
        }}
      />
    </div>
  );
};
2. Complete CSS Animation Definitions
/* Base Neural Logo Styles */
.animated-neural-logo {
  filter: drop-shadow(0 0 10px rgba(159, 223, 255, 0.5));
  position: relative;
}
/* Enhanced hover effect */
.animated-neural-logo:hover {
  animation-duration: 2s;
}
.animated-neural-logo:hover > div {
  animation-duration: 2s;
}
/* Core Logo Animation - Gentle Heartbeat */
.neural-brain-logo {
  animation: gentleHeartbeat 3s ease-in-out infinite;
  transform-origin: center;
}
/* Gentle Heartbeat Rhythm Animation */
@keyframes gentleHeartbeat {
  0% {
    transform: scale(1);
    filter: brightness(1) drop-shadow(0 0 8px rgba(159, 223, 255, 0.5));
  }
  20% {
    transform: scale(1.04);
    filter: brightness(1.05) drop-shadow(0 0 10px rgba(159, 223, 255, 0.6));
  }
  30% {
    transform: scale(1);
    filter: brightness(1) drop-shadow(0 0 8px rgba(159, 223, 255, 0.5));
  }
  40% {
    transform: scale(1.06);
    filter: brightness(1.08) drop-shadow(0 0 12px rgba(159, 223, 255, 0.7));
  }
  60% {
    transform: scale(1);
    filter: brightness(1) drop-shadow(0 0 8px rgba(159, 223, 255, 0.5));
  }
  100% {
    transform: scale(1);
    filter: brightness(1) drop-shadow(0 0 8px rgba(159, 223, 255, 0.5));
  }
}
/* Primary Continuous Water Ripples Animation */
@keyframes continuousRipples {
  0% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.8;
    border-width: 2px;
  }
  25% {
    transform: translate(-50%, -50%) scale(1.5);
    opacity: 0.6;
    border-width: 1.5px;
  }
  50% {
    transform: translate(-50%, -50%) scale(2.2);
    opacity: 0.4;
    border-width: 1px;
  }
  75% {
    transform: translate(-50%, -50%) scale(3.0);
    opacity: 0.2;
    border-width: 0.5px;
  }
  100% {
    transform: translate(-50%, -50%) scale(4.2);
    opacity: 0;
    border-width: 0px;
  }
}
/* Secondary Ripple Layer Animation */
@keyframes rippleLayer1 {
  0% {
    transform: translate(-50%, -50%) scale(0.9);
    opacity: 0;
  }
  10% {
    opacity: 0.7;
  }
  100% {
    transform: translate(-50%, -50%) scale(4.5);
    opacity: 0;
  }
}
/* Tertiary Ripple Layer Animation */
@keyframes rippleLayer2 {
  0% {
    transform: translate(-50%, -50%) scale(0.8);
    opacity: 0;
  }
  15% {
    opacity: 0.5;
  }
  100% {
    transform: translate(-50%, -50%) scale(5.0);
    opacity: 0;
  }
}
/* CSS-only pseudo-element version */
.animated-neural-logo::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  border: 2px solid rgba(159, 223, 255, 0.8);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  animation: continuousRipples 3s ease-out infinite;
  pointer-events: none;
}
.animated-neural-logo::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  border: 1px solid rgba(159, 223, 255, 0.6);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  animation: continuousRipples 3s ease-out infinite 1s;
  pointer-events: none;
}
3. HTML/CSS Only Implementation
<div class="animated-neural-logo" style="width: 120px; height: 120px; position: relative;">
  <!-- Primary Ripple -->
  <div style="
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    border: 2px solid rgba(159, 223, 255, 0.8);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: continuousRipples 3s ease-out infinite;
    pointer-events: none;
  "></div>
  
  <!-- Secondary Ripple -->
  <div style="
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    border: 1px solid rgba(159, 223, 255, 0.6);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: continuousRipples 3s ease-out infinite 1s;
    pointer-events: none;
  "></div>
  
  <!-- Tertiary Ripple -->
  <div style="
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    border: 1px solid rgba(159, 223, 255, 0.4);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: rippleLayer1 3s ease-out infinite 0.5s;
    pointer-events: none;
  "></div>
  
  <!-- Additional Subtle Layer -->
  <div style="
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    border: 1px solid rgba(159, 223, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: rippleLayer2 3s ease-out infinite 2s;
    pointer-events: none;
  "></div>
  
  <!-- Core Logo -->
  <img 
    src="your-logo.png" 
    alt="Neural Logo with Water Ripples" 
    style="
      width: 100%;
      height: 100%;
      object-fit: contain;
      filter: brightness(1) drop-shadow(0 0 8px rgba(159, 223, 255, 0.6));
      animation: gentleHeartbeat 3s ease-in-out infinite;
      position: relative;
      z-index: 10;
    "
  />
</div>
4. Vue.js Implementation
<template>
  <div 
    class="animated-neural-logo"
    :style="containerStyle"
  >
    <div 
      v-for="(layer, index) in rippleLayers"
      :key="index"
      class="absolute top-1/2 left-1/2 pointer-events-none"
      :style="layer.style"
    />
    
    <img
      :src="logoSrc"
      :alt="altText"
      class="neural-brain-logo relative z-10"
      :style="logoStyle"
    />
  </div>
</template>
<script>
export default {
  name: 'AnimatedNeuralLogo',
  props: {
    size: { type: Number, default: 120 },
    logoSrc: { type: String, required: true },
    altText: { type: String, default: 'Neural Logo with Water Ripples' }
  },
  computed: {
    containerStyle() {
      return {
        width: this.size + 'px',
        height: this.size + 'px',
        position: 'relative',
        animation: 'gentleHeartbeat 3s ease-in-out infinite',
        transformOrigin: 'center'
      };
    },
    logoStyle() {
      return {
        width: '100%',
        height: '100%',
        objectFit: 'contain',
        filter: 'brightness(1) drop-shadow(0 0 8px rgba(159, 223, 255, 0.6))'
      };
    },
    rippleLayers() {
      return [
        {
          style: {
            width: '100%',
            height: '100%',
            border: '2px solid rgba(159, 223, 255, 0.8)',
            borderRadius: '50%',
            transform: 'translate(-50%, -50%)',
            animation: 'continuousRipples 3s ease-out infinite'
          }
        },
        {
          style: {
            width: '100%',
            height: '100%',
            border: '1px solid rgba(159, 223, 255, 0.6)',
            borderRadius: '50%',
            transform: 'translate(-50%, -50%)',
            animation: 'continuousRipples 3s ease-out infinite 1s'
          }
        },
        {
          style: {
            width: '100%',
            height: '100%',
            border: '1px solid rgba(159, 223, 255, 0.4)',
            borderRadius: '50%',
            transform: 'translate(-50%, -50%)',
            animation: 'rippleLayer1 3s ease-out infinite 0.5s'
          }
        },
        {
          style: {
            width: '100%',
            height: '100%',
            border: '1px solid rgba(159, 223, 255, 0.2)',
            borderRadius: '50%',
            transform: 'translate(-50%, -50%)',
            animation: 'rippleLayer2 3s ease-out infinite 2s'
          }
        }
      ];
    }
  }
}
</script>
5. React Native Implementation
import React, { useEffect, useRef } from 'react';
import { View, Image, Animated } from 'react-native';
const AnimatedNeuralLogo = ({ size = 120, logoSrc, style }) => {
  const ripple1Scale = useRef(new Animated.Value(1)).current;
  const ripple2Scale = useRef(new Animated.Value(1)).current;
  const ripple3Scale = useRef(new Animated.Value(1)).current;
  const ripple4Scale = useRef(new Animated.Value(1)).current;
  
  const ripple1Opacity = useRef(new Animated.Value(0.8)).current;
  const ripple2Opacity = useRef(new Animated.Value(0.6)).current;
  const ripple3Opacity = useRef(new Animated.Value(0.4)).current;
  const ripple4Opacity = useRef(new Animated.Value(0.2)).current;
  const logoScale = useRef(new Animated.Value(1)).current;
  useEffect(() => {
    // Heartbeat animation for logo
    const heartbeatSequence = Animated.loop(
      Animated.sequence([
        Animated.timing(logoScale, { toValue: 1.04, duration: 600, useNativeDriver: true }),
        Animated.timing(logoScale, { toValue: 1, duration: 300, useNativeDriver: true }),
        Animated.timing(logoScale, { toValue: 1.06, duration: 400, useNativeDriver: true }),
        Animated.timing(logoScale, { toValue: 1, duration: 1700, useNativeDriver: true }),
      ])
    );
    // Ripple animations
    const createRippleAnimation = (scale, opacity, delay) => {
      return Animated.loop(
        Animated.sequence([
          Animated.delay(delay),
          Animated.parallel([
            Animated.timing(scale, { toValue: 4.2, duration: 3000, useNativeDriver: true }),
            Animated.timing(opacity, { toValue: 0, duration: 3000, useNativeDriver: true })
          ]),
          Animated.timing(scale, { toValue: 1, duration: 0, useNativeDriver: true }),
          Animated.timing(opacity, { toValue: opacity._startingValue, duration: 0, useNativeDriver: true })
        ])
      );
    };
    heartbeatSequence.start();
    createRippleAnimation(ripple1Scale, ripple1Opacity, 0).start();
    createRippleAnimation(ripple2Scale, ripple2Opacity, 500).start();
    createRippleAnimation(ripple3Scale, ripple3Opacity, 1000).start();
    createRippleAnimation(ripple4Scale, ripple4Opacity, 1500).start();
    return () => {
      heartbeatSequence.stop();
    };
  }, []);
  const rippleStyle = (scale, opacity, borderColor) => ({
    position: 'absolute',
    width: size,
    height: size,
    borderRadius: size / 2,
    borderWidth: 1,
    borderColor,
    transform: [{ scale }],
    opacity,
    top: 0,
    left: 0,
  });
  return (
    <View style={[{ width: size, height: size, position: 'relative' }, style]}>
      <Animated.View style={rippleStyle(ripple1Scale, ripple1Opacity, 'rgba(159, 223, 255, 0.8)')} />
      <Animated.View style={rippleStyle(ripple2Scale, ripple2Opacity, 'rgba(159, 223, 255, 0.6)')} />
      <Animated.View style={rippleStyle(ripple3Scale, ripple3Opacity, 'rgba(159, 223, 255, 0.4)')} />
      <Animated.View style={rippleStyle(ripple4Scale, ripple4Opacity, 'rgba(159, 223, 255, 0.2)')} />
      
      <Animated.Image
        source={{ uri: logoSrc }}
        style={{
          width: size,
          height: size,
          position: 'relative',
          zIndex: 10,
          transform: [{ scale: logoScale }]
        }}
        resizeMode="contain"
      />
    </View>
  );
};
export default AnimatedNeuralLogo;
📋 TECHNICAL SPECIFICATIONS
Animation Parameters
Duration: 3 seconds (synchronized heartbeat rhythm)
Timing Function: ease-out for ripples, ease-in-out for core logo
Staggered Delays: 0s, 0.5s, 1s, 1.5s, 2s
Infinite Loop: Continuous animation cycle
Scaling Parameters
Ripple Start Scale: 1.0 (100%)
Ripple End Scale: 4.2-5.0 (420%-500%)
Core Logo Heartbeat: 1.0 → 1.04 → 1.0 → 1.06 → 1.0 (6% max scale)
Opacity Progression
Layer 1 (Primary): 0.8 → 0 (strongest ripple)
Layer 2 (Secondary): 0.6 → 0 (medium strength)
Layer 3 (Tertiary): 0.4 → 0 (subtle effect)
Layer 4 (Background): 0.2 → 0 (very subtle)
Border Thickness Animation
Dynamic Reduction: 2px → 0px as ripples expand
Creates Realistic Water Effect: Thinner as ripples spread
Color Values (EXACT)
/* Primary Ripple Colors */
rgba(159, 223, 255, 0.8)  /* Primary strongest ripple */
rgba(159, 223, 255, 0.6)  /* Secondary ripple */
rgba(159, 223, 255, 0.4)  /* Tertiary ripple */
rgba(159, 223, 255, 0.2)  /* Subtle background ripple */
/* Core Logo Glow */
rgba(159, 223, 255, 0.6)  /* Logo drop-shadow glow */
🎯 IMPLEMENTATION INSTRUCTIONS FOR YOUR AGENT
Step 1: Theme Setup
Copy the complete CSS variables section to your main CSS file or theme configuration:

Add the complete :root CSS variables block to establish the neural theme colors across your platform.
Step 2: Choose Implementation Method
Select based on your technology stack:

React/TypeScript: Use the AnimatedLogo component
Vue.js: Use the Vue component implementation
HTML/CSS Only: Use the pure HTML implementation
React Native: Use the React Native Animated implementation
Step 3: Animation Setup
Copy ALL the keyframe animations:

@keyframes gentleHeartbeat
@keyframes continuousRipples
@keyframes rippleLayer1
@keyframes rippleLayer2
Step 4: Component Integration
Place the logo component in your desired location and pass:

size: Logo size in pixels (default: 120)
logoSrc: Path to your logo image
alt: Accessibility text
Step 5: Customization Options
Size Scaling: Adjust the size prop to fit your layout
Animation Speed: Modify animation durations (keep 3s for medical heartbeat sync)
Color Variations: Use the provided CSS variables for consistent theming
Hover Effects: Enhanced speed on hover (2s duration)
✅ QUALITY ASSURANCE CHECKLIST
 All CSS variables implemented in :root
 All 4 keyframe animations defined
 Logo component properly structured with 4 ripple layers
 Proper z-index for logo (z-10) above ripples
 Animation timing synchronized (3s duration)
 Color values exactly match specifications
 Accessibility alt text provided
 Responsive sizing implemented
 Cross-browser compatibility tested
🏥 MEDICAL PLATFORM STANDARDS
HIPAA Compliance: Colors and animations do not interfere with accessibility
Medical-Grade Timing: 3-second heartbeat rhythm aligns with medical monitoring
Professional Appearance: Subtle, non-distracting animation suitable for clinical environments
Performance Optimized: Efficient CSS animations for medical device compatibility
This complete implementation package ensures perfect consistency of the Anamnesis Medical Platform's neural theme and signature water ripple animation across all your platforms and applications.

Implementation Guide Version: 1.0
Last Updated: January 6, 2025
Compatible With: React, Vue, Angular, React Native, HTML/CSS, and all major frameworks